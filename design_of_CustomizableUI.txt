Requirement analysis

  Different customer prefers different user interface wordings, and layouts. WinForm hard-coded the UI into the busi-
ness codes, results in that whenever a user wants a change on UI display we have to modify the bus-
iness codes.
  This solution will provide a separated .xml file which contains the wordings and layouts of the UI, and
have specific codes read the .xml file to change the UI, this is called "configuration over convention". By t-
he way, "convention" means we assume that all customers use the same wordings and layouts, "configuration"
means the .xml file.
  Basically, the idea is that each form in the WinForm program will have its own section in the .xml file,
and when the form pops up, it reads the .xml file first and change its wording and layouts before showing. Different 
customers will have different .xml files.

Specifications

  The .xml file is written cumulatively in these rules:
  (1) Each form has its own section
  (2) Each control on the form is an element immediately under the form section
  (3) Each property of a control is an element immediately under the control element
  (4) If a property contains sub-properties, each sub-property is an immediate element under its parent-
    property
  (5) Usually we only care about the Text and Index properties of a control, because they represent
    the wording and sequencing of a control
  And create a general function that will read the .xml file, looks for the section for the current f-
orm first, then looks for the mappings between the controls on the form and the elements in that section
in the .xml file.
  After the section is found and the mappings are finished, the function proceeds to change the values
of the properties, usually the Text and Index properties. And the function will throw exceptions when
no section is found or errors occurs during the mapping, reminding that we need to check the .xml file,
and the UI of the application will show default layouts.

Design
  A sample of the .xml file:

  <?xml version="1.0" encoding="UTF-8"?>
  <form name="">
    <control name="">
      <Text>Text-value</Text>
    </control>
    <control name="">
      <Text>Text-value</Text>
    </control>
    <control name="">
      <Text>Text-value</Text>
    </control>
  </form>


